# -*- mode: org; fill-column: 78; -*-
# Time-stamp: <2025-03-23 15:57:20 krylon>
#
#+TAGS: internals(i) ui(u) bug(b) feature(f)
#+TAGS: design(e), meditation(m) plot(p)
#+TAGS: optimize(o) refactor(r) cleanup(c)
#+TODO: TODO(t)  RESEARCH(r) IMPLEMENT(i) TEST(e) | DONE(d) FAILED(f) CANCELLED(c)
#+TODO: MEDITATE(m) PLANNING(p) | SUSPENDED(s)
#+PRIORITIES: A G D

* RPG [1/8]
  :PROPERTIES:
  :COOKIE_DATA: todo recursive
  :VISIBILITY: children
  :END:
  A disappointing attempt at a text-based role-playing game.
  ...
  [2025-03-17 Mo 21:57]
  I am considering a fresh start, using Ruby. Maybe Lua.
** Clocktable
   #+BEGIN: clocktable :scope file :maxlevel 255 :emphasize t
   #+CAPTION: Clock summary at [2025-03-23 So 15:57]
   | Headline                         | Time      |         |       |       |      |      |
   |----------------------------------+-----------+---------+-------+-------+------+------|
   | *Total time*                     | *1d 3:06* |         |       |       |      |      |
   |----------------------------------+-----------+---------+-------+-------+------+------|
   | *RPG [1/8]*                      | *1d 3:06* |         |       |       |      |      |
   | \_  /Components [1/8]/           |           | /23:39/ |       |       |      |      |
   | \_    Engine [0/6]               |           |         | 18:22 |       |      |      |
   | \_      Mechanics [0/6]          |           |         |       | 16:37 |      |      |
   | \_        Fight the Power! [0/0] |           |         |       |       | 7:10 |      |
   | \_        Talk to me! [0/3]      |           |         |       |       | 5:37 |      |
   | \_          A state machine?     |           |         |       |       |      | 4:45 |
   | \_    UI [2/2]                   |           |         |  5:17 |       |      |      |
   | \_      Prompt                   |           |         |       |  2:07 |      |      |
   | \_      Create character, world  |           |         |       |  2:36 |      |      |
   | \_  /World building [0/1]/       |           | /3:27/  |       |       |      |      |
   | \_    World Generator [0/0]      |           |         |  3:27 |       |      |      |
   #+END:
** Features [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
** Components [1/8]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Engine [0/6]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-03-14 Fr 16:35]--[2025-03-14 Fr 18:10] =>  1:35
    CLOCK: [2025-03-13 Do 18:21]--[2025-03-13 Do 18:31] =>  0:10
    :END:
**** Storage
     I am going to need to store both the world(s) and the state of a running
     game.
     As I am feeling lazy, I think I'll use something like JSON or pickle. If
     I find that to be inconvenient, I will reconsider.
**** TODO Mechanics [0/6]
     :PROPERTIES:
     :COOKIE_DATA: todo recursive
     :VISIBILITY: children
     :END:
     :LOGBOOK:
     CLOCK: [2025-03-14 Fr 13:05]--[2025-03-14 Fr 13:43] =>  0:38
     CLOCK: [2025-03-14 Fr 12:25]--[2025-03-14 Fr 13:00] =>  0:35
     CLOCK: [2025-03-13 Do 19:53]--[2025-03-13 Do 21:28] =>  1:35
     CLOCK: [2025-03-13 Do 18:42]--[2025-03-13 Do 19:33] =>  0:51
     CLOCK: [2025-03-13 Do 18:31]--[2025-03-13 Do 18:42] =>  0:11
     :END:
     This is going to be tricky. At least for me, because I have never done
     anything like this before. So there will be a lot of trial and error
     initially.
***** TODO Magic [0/0]
***** TODO Fight the Power! [0/0]                                     :feature:
      :PROPERTIES:
      :COOKIE_DATA: todo recursive
      :VISIBILITY: children
      :END:
      :LOGBOOK:
      CLOCK: [2025-03-20 Do 13:08]--[2025-03-20 Do 20:18] =>  7:10
      :END:
      I want to make the fighting system less tedious.
      - [ ] Allow player to flee (or attempt to)
      - [ ] Monster might flee?
      - [X] When slain, monster drop items!
      - [ ] More options, e.g. focus on defense vs attack?
      - [ ] I might make a separate sub Shell for this?
***** TODO Talk to me! [0/3]
      :PROPERTIES:
      :COOKIE_DATA: todo recursive
      :VISIBILITY: children
      :END:
      :LOGBOOK:
      CLOCK: [2025-03-17 Mo 18:05]--[2025-03-17 Mo 18:41] =>  0:36
      CLOCK: [2025-03-15 Sa 21:26]--[2025-03-15 Sa 21:42] =>  0:16
      :END:
      Would be nice if one could talk to characters. I am thinking of a
      dialogue tree as in Shadowrun. But that's going to be a challenge.
      I found a library, [[file:///usr/share/doc/packages/python313-prompt_toolkit/README.rst][prompt_toolkit]], that seems like a great fit.
      [2025-03-15 Sa 20:03] Yeah, the mechanics are great, now I need to think
      about the data.
****** TODO Format
       I need to think about the format. I want a data format that I can
       easily edit manually and process from the Python side. Python code is
       not a very good way of storing a game.
       I miss the simple but powerful syntax Go has for data literals. Or Lua.
****** TODO A state machine?
       :LOGBOOK:
       CLOCK: [2025-03-17 Mo 17:22]--[2025-03-17 Mo 18:05] =>  0:43
       CLOCK: [2025-03-16 So 15:29]--[2025-03-16 So 17:00] =>  1:31
       CLOCK: [2025-03-16 So 11:50]--[2025-03-16 So 12:43] =>  0:53
       CLOCK: [2025-03-16 So 08:53]--[2025-03-16 So 09:25] =>  0:32
       CLOCK: [2025-03-15 Sa 21:42]--[2025-03-15 Sa 22:48] =>  1:06
       :END:
       A very brief, superficial survey of the Interwebs tells me, a
       statemachine might be the way to go.
       The good news is that there are numerous libraries to aid in creating
       state machines.
       The bad news is that there are *numerous* libraries, so I have to take
       a survey of what they offer.
       [2025-03-16 So 08:53]
       Something like that, anyway. I just had an idea, as I was waking up:
       Dialogue consists of panels. Each panel is a bit of text, the NPC's
       speech, and a menu of responses.
       Each response has a link to the next panel, plus some logic to update
       the world, the NPC's attitude, etc.
       The latter part might be a bit tricky to represent.
       Each choice needs (optionally, at least) a check if it is available,
       and a bit of logic to update the world's state afterwards.
       I think the world might need a set of global flags to mark if something
       has happened, yet.
****** TODO Consequences
       When the player gives certain answers in a dialogue, that may have
       consequences for the Character we're talking to or the Location we're
       in, or the World.
       The current state of modeling this insufficent still. A Flag should
       identify if it applies to a Character, Location, or the World (or a
       combination of these).
       Also, the Character's Attitude might change. 
*** UI [2/2]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-03-14 Fr 14:50]--[2025-03-14 Fr 15:24] =>  0:34
    :END:
**** DONE Prompt
     CLOSED: [2025-03-15 Sa 17:19]
     :LOGBOOK:
     CLOCK: [2025-03-15 Sa 17:13]--[2025-03-15 Sa 17:19] =>  0:06
     CLOCK: [2025-03-15 Sa 15:06]--[2025-03-15 Sa 17:06] =>  2:00
     CLOCK: [2025-03-15 Sa 10:31]--[2025-03-15 Sa 10:32] =>  0:01
     :END:
     I discovered prompt_toolkit, which so far is great.
**** DONE Create character, world
     CLOSED: [2025-03-21 Fr 22:53]
     :LOGBOOK:
     CLOCK: [2025-03-13 Do 21:51]--[2025-03-14 Fr 00:25] =>  2:34
     CLOCK: [2025-03-13 Do 21:28]--[2025-03-13 Do 21:30] =>  0:02
     :END:
     In order to do some testing, I will need to create a player character and
     a world.
     Creating the world should be automatic, creating the player interactive.
** World building [0/1]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** TODO World Generator [0/0]
    :PROPERTIES:
    :COOKIE_DATA: todo recursive
    :VISIBILITY: children
    :END:
    :LOGBOOK:
    CLOCK: [2025-03-23 So 14:52]--[2025-03-23 So 15:57] =>  1:05
    CLOCK: [2025-03-22 Sa 16:15]--[2025-03-22 Sa 17:29] =>  1:14
    CLOCK: [2025-03-21 Fr 21:45]--[2025-03-21 Fr 22:53] =>  1:08
    :END:
** Plot [0/0]
   :PROPERTIES:
   :COOKIE_DATA: todo recursive
   :VISIBILITY: children
   :END:
*** Ace of Spades
    The player is an intern at the royal court and is given the mission to
    find out why strange things have been going on in the realm lately.
    The Great Oracle, for example, has been giving weird answers ("maybe" for
    yes-and-no questions, "idk lmao" for others). Magic has been
    malfunctioning, but other things, too.
    Turns out, the kingdom's Random Number Generator is broken.
    There are several ways to make the realm random again:
    - collect entropy and infuse the RNG with it
    - steal an RNG from another kingdom or a dragon
    - create a new RNG that is even more random than the old one ever was.
    - bail and watch the crystal palace crash from afar. Kind of dark, but
      also outside the box.
